def heap_sort(arr):
    comparisons = 0

    def heapify(arr, n, i):
        nonlocal comparisons
        largest = i
        left = 2 * i + 1
        right = 2 * i + 2

        if left < n and arr[i] < arr[left]:
            comparisons += 1
            largest = left

        if right < n and arr[largest] < arr[right]:
            comparisons += 1
            largest = right

        if largest != i:
            arr[i], arr[largest] = arr[largest], arr[i]
            heapify(arr, n, largest)

    # Build a max heap
    for i in range(len(arr) // 2 - 1, -1, -1):
        heapify(arr, len(arr), i)

    # Extract elements from the heap one by one
    for i in range(len(arr) - 1, 0, -1):
        arr[0], arr[i] = arr[i], arr[0]
        heapify(arr, i, 0)
        comparisons += 1

    return comparisons

arr = [5, 2, 8, 12, 3]
comparisons = heap_sort(arr)
print("Number of comparisons:", comparisons)
print("Sorted array:", arr)

----------------------------------------------------
arr = [5, 2, 8, 12, 3]
comparisons = heap_sort(arr)
print("Number of comparisons:", comparisons)
print("Sorted array:", arr)

-------------------------------------------------------
Number of comparisons: 8
Sorted array: [2, 3, 5, 8, 12]

